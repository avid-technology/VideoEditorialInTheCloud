{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "showCode": {
            "defaultValue": "show",
            "type": "String"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_NV12s_v3",
            "metadata": {
                "description": "Size of the Media Composer VM."
            },
            "allowedValues": [
                "Standard_NV4as_v4",
                "Standard_NV8as_v4",
                "Standard_NV16as_v4",
                "Standard_NV32as_v4",
                "Standard_NV12s_v3",
                "Standard_NV24s_v3",
                "Standard_NV48s_v3"
            ]
        },
        "numberOfInstances": {
            "defaultValue": 10,
            "minValue": 1,
            "maxValue": 65,
            "type": "Int",
            "metadata": {
                "description": "Number of VMs to deploy."
            }
        },
        "startNumberingAt": {
            "defaultValue": 1,
            "type": "Int",
            "metadata": {
                "description": "Start numbering VMs from here."
            }
        },
        "suffixLength": {
            "defaultValue": 2,
            "type": "Int",
            "metadata": {
                "description": "Number of digits to append to vmname (NOTE: VM names must be less than 15 characters)."
            }
        },
        "virtualNetworkName": {
            "defaultValue": "myvnet",
            "type": "String",
            "metadata": {
                "description": "Name of an existing vNet for the VMs."
            }
        },
        "teradiciRegistrationCode": {
            "type": "String",
            "metadata": {
                "description": "Teradici Registration Code to license the PCoIP Graphics Agent."
            }
        },
        "subnetName": {
            "defaultValue": "mysubnet1",
            "type": "String",
            "metadata": {
                "description": "Name of an existing subnet to attach to the VMs."
            }
        }
    },
    "variables": {
        "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('virtualNetworkName'),parameters('subnetName'))]",
        "vmName": "[concat(parameters('showCode'),'-mc')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-03-30",
            "name": "[concat(variables('vmName'),'-nic',padleft(string(copyIndex(parameters('startNumberingAt'))),parameters('suffixLength'),'0'))]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfInstances')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "name": "[concat(variables('vmName'),'-',padleft(string(copyIndex(parameters('startNumberingAt'))),parameters('suffixLength'),'0'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "nicLoop"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks/',concat(variables('vmName'),'-','os-disk',padleft(string(copyIndex(parameters('startNumberingAt'))),parameters('suffixLength'),'0')))]"
                        },
                        "osType": "Windows",
                        "createOption": "Attach",
                        "name": "[concat(variables('vmName'),'-','os-disk',padleft(string(copyIndex(parameters('startNumberingAt'))),parameters('suffixLength'),'0'))]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmName'),'-nic',padleft(string(copyIndex(parameters('startNumberingAt'))),parameters('suffixLength'),'0')))]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('numberOfInstances')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2018-06-01",
            "name": "[concat(variables('vmName'),'-',padleft(string(copyIndex(parameters('startNumberingAt'))),parameters('suffixLength'),'0'),'/config-teradici-1')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "virtualMachineLoop"
            ],
            "tags": {
                "displayName": "config-teradici-1"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/avid-technology/VideoEditorialInTheCloud/master/Avid_Edit_In_The_Cloud_Arm/scripts/clone-post-config.ps1"
                    ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ./clone-post-config.ps1 -RegistrationCode ', parameters('teradiciRegistrationCode'))]"
                }
            },
            "copy": {
                "name": "runExtension",
                "count": "[parameters('numberOfInstances')]"
            }
        }
    ]
}